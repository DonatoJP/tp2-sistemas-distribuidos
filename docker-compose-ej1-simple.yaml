version: "3.8"
services:
  rabbitmq-tp2:
    # container_name: "rabbitmq-tp2"
    image: rabbitmq:3.9.7-management-alpine
    ports:
      # AMQP protocol port
      - '5672:5672'
      # HTTP management UI
      - '15672:15672'
    networks:
      - tp2-network

  # drop-input-column-answers-1:
  #   # container_name: drop-input-column-answers-1
  #   image: building-block:basic
  #   volumes:
  #     - ./src:/reviver
  #   env_file:
  #     - .env
  #   environment:
  #     - BLOCK_ID=1
  #     - OPERATOR_MODULE=operators.column_drop_topics
  #     - OPERATOR_PARAMS={"params_by_topic":{"answer.ej1":{"columns_to_keep":["Score","Body"],"perform_affinity":true,"affinity_key":"Score","affinity_divider":1}},"perform_affinity":true,"max_affinity":1}
  #     - INPUT_QUEUE_PARAMS={"pattern":"work_queue","queue_name":"input-answers"}
  #     - OUTPUT_QUEUE_PARAMS={"pattern":"topic","exchange_name":"qa-source"}
  #     - CENTINELS_TO_RECEIVE=1
  #     - CENTINELS_TO_SEND=1
  #   depends_on:
  #     - "rabbitmq-tp2"
  #   command: [ "basic_operator.py" ]
  #   networks:
  #     - tp2-network

  # ej1-filter-1:
  #   # container_name: ej1-filter-1
  #   image: building-block:basic
  #   volumes:
  #     - ./src:/reviver
  #   env_file:
  #     - .env
  #   environment:
  #     - BLOCK_ID=1
  #     - OPERATOR_MODULE=operators.filter
  #     - OPERATOR_PARAMS={"keep_columns":["Body"],"column":"Score","to_compare":10,"op":">",
  #       "perform_affinity":false}
  #     - INPUT_QUEUE_PARAMS={"pattern":"topic","exchange_name":"qa-source","routing_key":"answer.ej1.0","consumer_tag":"ej1-filter-1","queue_name":"ej1-filter-input-1"}
  #     - OUTPUT_QUEUE_PARAMS={"pattern":"work_queue","queue_name":"ej1-filter-output"}
  #     - CENTINELS_TO_RECEIVE=1
  #     - CENTINELS_TO_SEND=1
  #   depends_on:
  #     - "rabbitmq-tp2"
  #   command: [ "basic_operator.py" ]
  #   networks:
  #     - tp2-network

  # ej1-sentiment-analyser-1:
  #   # container_name: ej1-sentiment-analyser-1
  #   image: building-block:full
  #   volumes:
  #     - ./src:/reviver
  #   env_file:
  #     - .env
  #   environment:
  #     - PYTHONUNBUFFERED=1
  #     - BLOCK_ID=1
  #     - OPERATOR_MODULE=operators.sentiment_analysis
  #     - OPERATOR_PARAMS={"column":"Body", "perform_affinity":false}
  #     - INPUT_QUEUE_PARAMS={"pattern":"work_queue","queue_name":"ej1-filter-output","consumer_tag":"ej1-sentiment-analyser-1"}
  #     - OUTPUT_QUEUE_PARAMS={"pattern":"work_queue","queue_name":"ej1-sa-output"}
  #     - CENTINELS_TO_RECEIVE=1
  #     - CENTINELS_TO_SEND=1
  #   depends_on:
  #     - "rabbitmq-tp2"
  #   command: [ "basic_operator.py" ]
  #   networks:
  #     - tp2-network

  # ej1-avg-holder-1:
  #   # container_name: ej1-avg-holder-1
  #   image: building-block:basic
  #   volumes:
  #     - ./src:/reviver
  #   env_file:
  #     - .env
  #   environment:
  #     - PYTHONUNBUFFERED=1
  #     - BLOCK_ID=1
  #     - OPERATOR_MODULE=holders.avg_holder
  #     - OPERATOR_PARAMS={"column":"result", "perform_affinity":false}
  #     - INPUT_QUEUE_PARAMS={"pattern":"work_queue","queue_name":"ej1-sa-output","consumer_tag":"ej1-avg-holder-1"}
  #     - OUTPUT_QUEUE_PARAMS={"pattern":"work_queue","queue_name":"ej1-final-output"}
  #     - CENTINELS_TO_RECEIVE=1
  #     - CENTINELS_TO_SEND=0
  #   depends_on:
  #     - "rabbitmq-tp2"
  #   command: [ "basic_holder.py" ]
  #   networks:
  #     - tp2-network

  vault1:
    container_name: vault1
    build: ./src/reviver
    env_file:
      - ./src/reviver/vault/.env
    environment:
      - NODE_ID=1
    volumes:
      &vaultvolumes
      - ./src/reviver:/app
    entrypoint: [ "./wait-for", "rabbitmq-tp2:5672", "--", "python", "main-vault.py" ]
    networks:
      - tp2-network

  vault2:
    container_name: vault2
    build: ./src/reviver
    env_file:
      - ./src/reviver/vault/.env
    environment:
      - NODE_ID=2
    volumes: *vaultvolumes
    entrypoint: [ "./wait-for", "rabbitmq-tp2:5672", "--", "python", "main-vault.py" ]
    networks:
      - tp2-network

  vault3:
    container_name: vault3
    build: ./src/reviver
    env_file:
      - ./src/reviver/vault/.env
    environment:
      - NODE_ID=3
    volumes: *vaultvolumes
    entrypoint: [ "./wait-for", "rabbitmq-tp2:5672", "--", "python", "main-vault.py" ]
    networks:
      - tp2-network

  # reviver1:
  #   container_name: reviver1
  #   build: ./src/reviver
  #   env_file:
  #     - ./src/reviver/.env
  #   environment:
  #     - NODE_ID=1
  #   volumes:
  #     &appvolumes
  #     - ./src/reviver/state.txt:/app/state.txt
  #     - ./src/reviver:/app
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   entrypoint: [ "./wait-for", "rabbitmq-tp2:5672", "--", "python", "main.py" ]
  #   networks:
  #     - tp2-network

  # reviver2:
  #   container_name: reviver2
  #   build: ./src/reviver
  #   env_file:
  #     - ./src/reviver/.env
  #   environment:
  #     - NODE_ID=2
  #   volumes: *appvolumes
  #   command: [ "./wait-for", "reviver1:9000", "--", "python", "main.py" ]
  #   networks:
  #     - tp2-network

  # reviver3:
  #   container_name: reviver3
  #   build: ./src/reviver
  #   env_file:
  #     - ./src/reviver/.env
  #   environment:
  #     - NODE_ID=3
  #   volumes: *appvolumes
  #   command: [ "./wait-for", "reviver2:9000", "--", "python", "main.py" ]
  #   networks:
  #     - tp2-network

  # app4:
  #   # container_name: app4
  #   build: ./src/reviver
  #   env_file:
  #     - ./src/reviver/.env
  #   environment:
  #     - NODE_ID=4
  #   volumes: *appvolumes
  #   command: [ "./wait-for", "reviver3:9000", "--", "python", "main.py" ]
  #   networks:
  #     - tp2-network

  # app5:
  #   # container_name: app5
  #   build: ./src/reviver
  #   env_file:
  #     - ./src/reviver/.env
  #   environment:
  #     - NODE_ID=5
  #   volumes: *appvolumes
  #   command: [ "./wait-for", "app4:9000", "--", "python", "main.py" ]
  #   networks:
  #     - tp2-network

networks:
  tp2-network:
    ipam:
      driver: default
      config:
        - subnet: 172.25.201.0/24
