gASVXAUAAAAAAAB9lCiMC3dvcmtsb2FkX2lklEsFjARkYXRhlFj9BAAAeyIiOiAiMCIsICJJZCI6ICIxNjUxNDc0OSIsICJPd25lclVzZXJJZCI6ICI3NjUyOTcuMCIsICJDcmVhdGlvbkRhdGUiOiAiMjAxMy0wNS0xM1QwNDoxMTo1OFoiLCAiUGFyZW50SWQiOiAiMTY0MjA4MjAiLCAiU2NvcmUiOiAiMTAwIiwgIkJvZHkiOiAiPHA+SW4gdGhlIGZpbGUgdGhhdCB5b3UgZGVjbGFyZSB5b3VyIGVuZ2luZSB1c2UgdGhpcyBjb21tYW5kOjwvcD5cblxuPHByZT48Y29kZT5jbGFzcyBFbmdpbmUgJmx0OyBSYWlsczo6RW5naW5lXG5cbiAgY29uZmlnLmFwcF9nZW5lcmF0b3JzIGRvIHxnfFxuICAgIGcudGVtcGxhdGVzLnVuc2hpZnQgRmlsZTo6ZXhwYW5kX3BhdGgoJy4uL3RlbXBsYXRlcycsIF9fRklMRV9fKVxuICBlbmRcblxuZW5kXG48L2NvZGU+PC9wcmU+XG5cbjxwPkl0IHNob3VsZCBzaGlmdCB0aGUgcHJlZmVyZW5jZSBvZiB3aGF0IHRlbXBsYXRlIGZvbGRlciBSYWlscyB1c2VzIGJ5IGRlZmF1bHQuPC9wPlxuXG48cD5Ob3cganVzdCBwdXQgdGhlIHRlbXBsYXRlIGZpbGVzIGluIGxpYi90ZW1wbGF0ZXMvZXJiL3NjYWZmb2xkL3RlbXBsYXRlX25hbWUuZXJiPC9wPlxuXG48cD5XaGVyZSB0ZW1wbGF0ZV9uYW1lIGlzIG9uZSBvZiB0aGUgZm9sbG93aW5nOiBfZm9ybS5odG1sLmVyYiwgZWRpdC5odG1sLmVyYiwgaW5kZXguaHRtbC5lcmIsIG5ldy5odG1sLmVyYiwgc2hvdy5odG1sLmVyYjwvcD5cblxuPHA+T25jZSB5b3UgaW5jbHVkZSB0aGUgZ2VtIHlvdSBzaG91bGQgYmUgYWJsZSB0byB1c2UgdGhlIHJhaWxzIGdlbmVyYXRlIHNjYWZmb2xkIGNvbW1hbmQgYXMgbm9ybWFsLjwvcD5cblxuPHA+SGVyZSBpcyBhbiBleGFtcGxlIG9mIGFuIGVuZ2luZSB0aGF0IG92ZXJyaWRlcyB0aGUgZGVmYXVsdCBzY2FmZm9sZGluZyBpbiByYWlsczo8L3A+XG5cbjxwPjxhIGhyZWY9XCJodHRwczovL2dpdGh1Yi5jb20vYnJvY2t0b25jZy9nZW1ib3JlZVwiIHJlbD1cIm5vZm9sbG93XCI+aHR0cHM6Ly9naXRodWIuY29tL2Jyb2NrdG9uY2cvZ2VtYm9yZWU8L2E+PC9wPlxuXG48cD5UaGlzIGlzIHdoZXJlIHRoZSB0ZW1wbGF0ZSBkaXJlY3RvcnkgaXMgbG9jYXRlZDo8L3A+XG5cbjxwPjxhIGhyZWY9XCJodHRwczovL2dpdGh1Yi5jb20vYnJvY2t0b25jZy9nZW1ib3JlZS90cmVlL21hc3Rlci9saWIvdGVtcGxhdGVzL2VyYi9zY2FmZm9sZFwiIHJlbD1cIm5vZm9sbG93XCI+aHR0cHM6Ly9naXRodWIuY29tL2Jyb2NrdG9uY2cvZ2VtYm9yZWUvdHJlZS9tYXN0ZXIvbGliL3RlbXBsYXRlcy9lcmIvc2NhZmZvbGQ8L2E+PC9wPlxuIn2UjAhjZW50aW5lbJSJjAd0YXNrX2lklIwkYTg3YjQ4MTktNDE0Yi00YjRmLTgxODQtNTgzNTkzOWQyZDc1lHUu